@model Aeropost.Models.Usuario
@{
    ViewData["Title"] = "Crear Usuario";
}

<h1>Crear Usuario</h1>

<h4>Usuario</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="userForm">
            <!--
            ════════════════════════════════════════════════════════════════════════════════════════
            TAG HELPER DE VALIDACIÓN: <div asp-validation-summary="All" class="text-danger"></div>
            ════════════════════════════════════════════════════════════════════════════════════════

            ¿QUÉ ES?
            - Es un Tag Helper de ASP.NET Core que muestra errores de validación
            - Se procesa en el SERVIDOR antes de enviar HTML al navegador
            - Busca errores en el ModelState del controlador automáticamente

            COMPONENTES:
            1. <div> → Contenedor HTML estándar para agrupar contenido
            2. asp-validation-summary="All" → Tag Helper que busca TODOS los errores
            3. class="text-danger" → Clase Bootstrap que aplica color rojo

            OPCIONES DEL ATRIBUTO asp-validation-summary:
            - "All" → Muestra TODOS los errores (generales + específicos de campos)
            - "ModelOnly" → Solo errores generales (no asociados a campos específicos)
            - "None" → No muestra nada (deshabilitado)

            PROCESAMIENTO EN TIEMPO DE EJECUCIÓN:

            SIN ERRORES (carga inicial):
            <div asp-validation-summary="All" class="text-danger"></div>
                    ↓ EL SERVIDOR PROCESA ↓
            <div class="text-danger"></div>  ← Div vacío, invisible

            CON ERRORES (después de validación fallida):
            <div asp-validation-summary="All" class="text-danger"></div>
                    ↓ EL SERVIDOR PROCESA ↓
            <div class="text-danger">
                <ul>
                    <li>Las claves no coinciden</li>
                    <li>El nombre es requerido</li>  ← Si hubiera más errores
                </ul>
            </div>

            FLUJO EN TU APLICACIÓN:
            1. Usuario envía formulario con claves diferentes
            2. Controlador ejecuta: ModelState.AddModelError("Pass", "Las claves no coinciden")
            3. Controlador ejecuta: return View(usuario)
            4. Tag Helper encuentra error en ModelState
            5. Tag Helper genera HTML con lista de errores
            6. Usuario ve: "• Las claves no coinciden" en rojo

            RESULTADO VISUAL:
            • Las claves no coinciden  ← Texto rojo con viñeta

            VENTAJAS:
            ✓ Automático: No necesitas lógica manual para mostrar errores
            ✓ Consistente: Formato uniforme para todos los errores
            ✓ Integrado: Funciona perfectamente con ASP.NET Core validation

            INTERACCIÓN CON OTROS ELEMENTOS:
            - Este elemento muestra TODOS los errores en UN lugar
            - Los <span asp-validation-for="Campo"> muestran errores específicos junto a cada campo
            - Tu error de contraseñas aparecerá en AMBOS lugares porque usas "All"
            -->
            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Nombre" class="control-label">Nombre Completo</label>
                <input asp-for="Nombre" class="form-control" type="text" required />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cedula" class="control-label">Cédula de Identidad</label>
                <input asp-for="Cedula" class="form-control" type="text" required />
                <span asp-validation-for="Cedula" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Genero" class="control-label">Género</label>
                <select asp-for="Genero" class="form-control" required>
                    <option value="">Seleccione una opción</option>
                    <option value="masculino">Masculino</option>
                    <option value="femenino">Femenino</option>
                </select>
                <span asp-validation-for="Genero" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User" class="control-label">Nombre de Usuario</label>
                <input asp-for="User" class="form-control" type="text" required />
                <span asp-validation-for="User" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Pass" class="control-label">Clave</label>
                <input asp-for="Pass" name="pass" id="pass" class="form-control" type="password" required />
                <span asp-validation-for="Pass" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Confirmar Clave</label>
                <input name="passConfirmacion" id="passConfirmacion" class="form-control" type="password" required />
            </div>
            <br />
            <div class="d-flex gap-2 mt-4">
                <button type="submit" class="btn btn-primary btn-lg shadow-sm px-4">
                    <i class="bi bi-person-plus-fill me-2"></i>Crear
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary btn-lg px-4">
                    <i class="bi bi-arrow-left me-2"></i>Volver a la lista
                </a>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
